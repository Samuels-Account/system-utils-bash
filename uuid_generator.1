.TH UUID_GENERATOR 1 "2024-04-12" "1.0" "UUID Generator Manual"
.SH NAME
uuid_generator \- utility script for generating UUIDs, categorizing directory content, and enhancing system monitoring.
.SH SYNOPSIS
.B uuid_generator
.RI [ --generate | --last | --all | --categorize [output_file] ]
.SH DESCRIPTION
.B uuid_generator
is a versatile bash script designed for system administrators to manage and monitor IT infrastructure efficiently. It facilitates the generation of UUIDs, analyzes directory contents, and logs system activities, including process management details.
.PP
The script generates UUIDs pseudo-randomly, ensuring uniqueness without relying on built-in system UUID generators. It checks for collisions with previously generated UUIDs and logs each UUID creation with a timestamp.
.PP
For directory management, the script categorizes files by type, computes collective sizes, and identifies the shortest and longest filenames. Results can be displayed on the terminal or directed to a specified output file.
.PP
Additionally, the script logs the PID of its main process at the start of execution and tracks the PIDs of any subprocesses initiated, particularly those handling file management and data processing tasks. This enhances traceability and aids in system diagnostics.
.SH OPTIONS
.TP
.B --generate
Generates a new UUID, checks for collisions, logs the event, and outputs the UUID both to the terminal and to a designated log file. Also logs the process ID (PID) of this operation.
.TP
.B --last
Displays the last generated UUID by retrieving it from the log file.
.TP
.B --all
Lists all previously generated UUIDs, including their generation times and values.
.TP
.B --categorize [output_file]
Analyzes and categorizes the contents of the '_Directory' folder by file type and size. Reports on the total space used and identifies the shortest and longest filenames within each subdirectory. Outputs results to the terminal by default or to a specified file if an output filename is provided. Logs the PID of each subprocess involved in the operation, enhancing monitoring and troubleshooting capabilities.
.SH EXAMPLES
.TP
.B Generate a UUID and log it:
.RS
uuid_generator --generate
.RE
.TP
.B Display the last generated UUID:
.RS
uuid_generator --last
.RE
.TP
.B List all generated UUIDs:
.RS
uuid_generator --all
.RE
.TP
.B Categorize directory contents and output to a file:
.RS
uuid_generator --categorize output.txt
.RE
.SH FILES
.TP
.B uuids.log
Stores all generated UUIDs along with their timestamps.
.TP
.B last_uuid.log
Contains the most recently generated UUID.
.TP
.B generation.log
Logs details of each UUID generation, including the date and user.
.TP
.B script_executions.log
Records each execution of the script, noting the command line arguments used, the user, and the PIDs of the script and any significant subprocesses, enhancing the audit trail.
.SH AUTHOR
Written by Samuel Ledun
